{"version":3,"sources":["AppMode.js","components/NavBar.js","components/LoginPage.js","components/FloatingButton.js","components/DeleteButton.js","components/EditButton.js","components/MoviePage.js","components/AddPage.js","components/InfoPage.js","components/SideMenu.js","components/ModeBar.js","components/MovieRefresh.js","components/App.js","serviceWorker.js","index.js"],"names":["AppMode","LOGIN","MOVIE","MOVIE_EDIT","MOVIE_LOG","MOVIE_INFO","MOVIER","Object","freeze","NavBar","handleMenuBtnClick","props","mode","changeMode","toggleMenuOpen","getMenuBtnIcon","menuOpen","id","className","onClick","this","title","React","Component","LoginPage","handleLogin","setState","loginBtnIcon","loginBtnLabel","setUserId","emailInputRef","current","value","localStorage","getItem","userId","setItem","JSON","stringify","handleLoginSubmit","event","preventDefault","setTimeout","createRef","passwordInputRef","state","accountName","accountPassword","focus","onSubmit","onChange","handleLoginChange","htmlFor","style","padding","fontSize","ref","type","placeholder","pattern","required","FloatingButton","handleClick","icon","DeleteButton","EditButton","MoviePage","setRows","t","rows","parse","console","log","tInfo","length","$","tBodies","innerHTML","movieData","splice","forceUpdate","map","r","index","productionCompany","genre","releaseDate","goToEdit","data","iIndex","deleteItem","AddPage","saveData","i","ttInfo","push","handleChange","name","target","handleSubmit","faIcon","btnLabel","budget","InfoPage","SideMenu","renderModeMenuItems","src","height","width","showAbout","ModeBar","handleModeBtnClick","newMode","MovieRefresh","modeTitle","modeToPage","App","handleChangeMode","openMenu","closeMenu","prevState","Id","stopPropagation","toggleAbout","renderAbout","window","addEventListener","removeEventListener","ModePage","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.d4a86592.chunk.js","sourcesContent":["const AppMode = {\r\n    LOGIN: \"LoginMode\",\r\n    MOVIE: \"MovieMode\",\r\n    MOVIE_EDIT: \"MovieMode-EditMovie\",\r\n    MOVIE_LOG: \"MovieMode-LogMovie\",\r\n    MOVIE_INFO: \"MovieInfoMode\",\r\n    MOVIER: \"MovieRefresh\"\r\n};\r\n\r\nObject.freeze(AppMode);\r\n\r\nexport default AppMode;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n    handleMenuBtnClick = () => {\r\n        if(this.props.mode === AppMode.MOVIE_EDIT || this.props.mode === AppMode.MOVIE_LOG) {\r\n            this.props.changeMode(AppMode.MOVIE);\r\n        }\r\n        else if (this.props.mode != AppMode.LOGIN){\r\n            this.props.toggleMenuOpen();\r\n        }\r\n    }\r\n\r\n    getMenuBtnIcon = () => {\r\n        if (this.props.mode === AppMode.MOVIE_LOG || this.props.mode === AppMode.MOVIE_EDIT) {\r\n            return \"fa fa-arrow-left\";\r\n        }\r\n        if (this.props.menuOpen) {\r\n            return \"fa fa-times\";\r\n        }\r\n        return \"fa fa-bars\";\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"navbar\" className=\"navbar\">\r\n                <span className=\"navbar-items\">\r\n                    <button id=\"sidemenu-btn\" onClick={this.handleMenuBtnClick}>\r\n                        <span id=\"sidemenu-btn-icon\" className={'sidemenu-btn-icon ' + this.getMenuBtnIcon()}></span>\r\n                    </button>\r\n                    <span id=\"topBarTitle\" className=\"navbar-title\">&nbsp;&nbsp;&nbsp;{this.props.title}&nbsp;&nbsp;&nbsp;</span>\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.emailInputRef = React.createRef();\r\n        this.passwordInputRef = React.createRef();\r\n        this.state = {\r\n            loginBtnIcon: \"fa fa-sign-in\",\r\n            loginBtnLabel: \"Log In\",\r\n            accountName: \"\",\r\n            accountPassword: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.emailInputRef.current.focus();\r\n    }\r\n\r\n    handleLogin = () => {\r\n        this.setState({\r\n            loginBtnIcon: \"fa fa-sign-in\",\r\n            loginBtnLabel: \"Log In\"\r\n        });\r\n        this.props.setUserId(this.emailInputRef.current.value);\r\n        let tInfo = localStorage.getItem(this.props.userId);\r\n        if (tInfo == null) {\r\n            let ttInfo = {\r\n                \"movieData\":[]\r\n            }\r\n            //ttInfo[\"movieData\"].push({\"title\":\"\",\"productionCompany\":\"\",\"length\":\"\",\"genre\":\"\",\"budget\":\"\",\"releaseDate\":\"\"})\r\n\r\n            localStorage.setItem(this.props.userId, JSON.stringify(ttInfo));\r\n        }\r\n        this.props.changeMode(AppMode.MOVIE);\r\n    }\r\n\r\n    handleLoginSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.setState({\r\n            loginBtnIcon: \"fa fa-spin fa-spinner\",\r\n            loginBtnLabel: \"Logging In...\"\r\n        });\r\n\r\n        setTimeout(this.handleLogin, 1000);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"login-mode-div\" className=\"padded-page\">\r\n                <center>\r\n                    <h1 />\r\n                    <form onSubmit={this.handleLoginSubmit} onChange={this.handleLoginChange}>\r\n                        <label htmlFor=\"emailInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                            Email:\r\n                    <input\r\n                                ref={this.emailInputRef}\r\n                                className=\"form-control login-text\"\r\n                                type=\"email\"\r\n                                placeholder=\"Enter Email Address\"\r\n                                id=\"emailInput\"\r\n                                pattern=\"[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}\"\r\n                                required={true}\r\n                            />\r\n                        </label>\r\n                        <p />\r\n                        <label htmlFor=\"passwordInput\" style={{ padding: 0, fontSize: 24 }}>\r\n                            Password:\r\n                    <input\r\n                                ref={this.passwordInputRef}\r\n                                className=\"form-control login-text\"\r\n                                type=\"password\"\r\n                                placeholder=\"Enter Password\"\r\n                                pattern=\"([A-Za-z0-9!@#$%^*]){4,}\"\r\n                                required={true}\r\n                            />\r\n                        </label>\r\n                        {/*<p>Password must be at least 8 chars long and contain at least 1 of the following: lower case, upper case, number special character</p>*/}\r\n                        <p className=\"bg-danger\" id=\"feedback\" style={{ fontSize: 16 }} />\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn-color-theme btn btn-primary btn-block login-btn\">\r\n                            <span className={this.state.loginBtnIcon} />\r\n                            &nbsp;{this.state.loginBtnLabel}\r\n                        </button>\r\n                        <br />\r\n\r\n                    </form>\r\n                </center>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LoginPage;","import React from 'react';\r\n\r\nclass FloatingButton extends React.Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <a className=\"floatbtn\" onClick={(this.props.menuOpen ? null : this.props.handleClick)}>\r\n                    <span className={\"floatbtn-icon \" + this.props.icon}></span>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FloatingButton;","import React from 'react';\r\n\r\nclass DeleteButton extends React.Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <button className=\"btn-danger\" onClick={this.props.handleClick}>Delete</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeleteButton;","import React from 'react';\r\n\r\nclass EditButton extends React.Component {\r\n    render(){\r\n        return (\r\n            <div>\r\n                <button className=\"editbtn\" onClick={this.props.handleClick}>Edit</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EditButton;","import React from 'react';\r\nimport $ from 'jquery';\r\nimport AppMode from '../AppMode.js';\r\nimport FloatingButton from './FloatingButton.js';\r\nimport DeleteButton from './DeleteButton';\r\nimport EditButton from './EditButton';\r\nclass MoviePage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            rows: JSON.parse(localStorage.getItem(this.props.userId))\r\n        }\r\n    }\r\n\r\n    setRows = (t) => {\r\n        this.setState(\r\n            {\r\n                rows: t\r\n            }\r\n        )\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.props.userId);\r\n        let tInfo = localStorage.getItem(this.props.userId);\r\n        if (tInfo == null || tInfo.length == 0) {\r\n            //tInfo = JSON.parse(tInfo);\r\n            //console.log(tInfo);\r\n            //let temp = this.state.rows.movieData[0].title;\r\n            //console.log(\"temp:\"+temp);\r\n            let inH = \"<tr><td>No</td><td>Info</td><td>To</td><td>Be</td><td>Displayed</td><td>:(</td></tr>\";\r\n            let tempp = {\r\n                \"movieData\": [\r\n                    {\r\n                        \"title\": \"no\",\r\n                        \"productionCompany\": \"Information\",\r\n                        \"length\": \"To\",\r\n                        \"genre\": \"Display,\",\r\n                        \"budget\": \"Sorry\",\r\n                        \"releaseDate\": \":(\"\r\n                    }\r\n                ]\r\n            }\r\n            this.setState({rows: tempp });\r\n            // let t = 0;\r\n            // for (let i = 0; i < tInfo.movieData.length; i++) {\r\n            //     //t = tInfo[i].id;\r\n            //     inH += \"<tr>\\n\";\r\n            //     //inH += \"<td>\" + tInfo[i].id + \"</td>\\n\";\r\n            //     inH += \"<td>\" + tInfo.movieData[i].title + \"</td>\\n\";\r\n            //     inH += \"<td>\" + tInfo.movieData[i].productionCompany + \"</td>\\n\";\r\n            //     inH += \"<td>\" + tInfo.movieData[i].length + \"</td>\\n\";\r\n            //     inH += \"<td>\" + tInfo.movieData[i].genre + \"</td>\\n\";\r\n            //     inH += \"<td>\" + tInfo.movieData[i].budget + \"</td>\\n\";\r\n            //     inH += \"<td>\" + tInfo.movieData[i].releaseDate + \"</td>\\n\";\r\n            //     inH += \"<td>\" + \"<button onclick='editViewRecordData(\" + t.toString() + \")'>View/Edit</button>\" + \"</td>\\n\";\r\n            //     inH += \"<td>\" + \"<button onclick='deleteRecird(\" + t.toString() + \")'>Delete</button>\" + \"</td>\\n\";\r\n            //     inH += \"</tr>\";\r\n            // }\r\n            $('#movieDataTable')[0].tBodies[0].innerHTML = inH;\r\n        }\r\n    }\r\n\r\n    testFunction(t) {\r\n        console.log(\"t:\"+t);\r\n    }\r\n\r\n    deleteItem(t){\r\n        let tInfo = JSON.parse(localStorage.getItem(this.props.userId));\r\n        tInfo.movieData.splice(t, 1);\r\n        localStorage.setItem(this.props.userId, JSON.stringify(tInfo));\r\n        this.props.changeMode(AppMode.MOVIE);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    goToEdit(t) {\r\n        localStorage.setItem(this.props.userId+\"_index\", t);\r\n        this.props.changeMode(AppMode.MOVIE_EDIT)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"padded\">\r\n                    <h1>Movie Data Table</h1>\r\n                    <div className=\"tableDiv\">\r\n                        <h3>could not get it to print no data to show. should be fine</h3>\r\n                        <table id='movieDataTable' className=\"movieDataTableClass\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <td>Title</td>\r\n                                    <td>Production Company</td>\r\n                                    <td>Length</td>\r\n                                    <td>Genre</td>\r\n                                    <td>Budget</td>\r\n                                    <td>Release Date</td>\r\n                                    <td>View/Edit</td>\r\n                                    <td>Delete</td>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                { this.state.rows.movieData.map((r, index) => (\r\n                                    <tr>\r\n                                        <td>\r\n                                            {r.title}\r\n                                        </td>\r\n                                        <td>\r\n                                            {r.productionCompany}\r\n                                        </td>\r\n                                        <td>\r\n                                            {r.length}\r\n                                        </td>\r\n                                        <td>\r\n                                            {r.genre}\r\n                                        </td>\r\n                                        <td>\r\n                                            {r.releaseDate}\r\n                                        </td>\r\n                                        <td>\r\n                                            <EditButton handleClick={() => this.goToEdit(index)} data={this.state.rows} iIndex={index}/>\r\n                                        </td><td>\r\n                                            <DeleteButton handleClick={() => this.deleteItem(index)} iIndex={index}/>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <FloatingButton handleClick={() => this.props.changeMode(AppMode.MOVIE_LOG)} menuOpen={this.props.menuOpen} icon={\"fa fa-plus\"} userId={this.props.userId} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MoviePage;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\nimport App from './App.js';\r\n\r\nclass AddPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        if (this.props.mode === AppMode.MOVIE_LOG) {\r\n            this.state = {\r\n                title: \"\",\r\n                productionCompany: \"\",\r\n                length: 0,\r\n                genre: \"\",\r\n                budget: 0,\r\n                releaseDate: \"\",\r\n                faIcon: \"fa fa-save\",\r\n                btnLabel: \"Save Info\"\r\n            }\r\n        }\r\n        else {\r\n            console.log(this.props);\r\n            let i = localStorage.getItem(this.props.userId+\"_index\");\r\n            let tInfo = JSON.parse(localStorage.getItem(this.props.userId));\r\n            this.state = {\r\n                title: tInfo.movieData[i].title,\r\n                productionCompany: tInfo.movieData[i].productionCompany,\r\n                length: tInfo.movieData[i].length,\r\n                genre: tInfo.movieData[i].genre,\r\n                budget: tInfo.movieData[i].budget,\r\n                releaseDate: tInfo.movieData[i].releaseDate,\r\n                faIcon: \"fa fa-edit\",\r\n                btnLabel: \"Update Info\"\r\n            } \r\n            \r\n        }\r\n    }\r\n\r\n    saveData = (data) => {\r\n        console.log(data);\r\n        console.log(this.props.userId);\r\n        let tInfo = JSON.parse(localStorage.getItem(this.props.userId));\r\n        if(this.props.mode === AppMode.MOVIE_EDIT){\r\n            let i = localStorage.getItem(this.props.userId+\"_index\");\r\n            tInfo.movieData.splice(i, 1);\r\n        }\r\n        console.log(tInfo);\r\n        if (tInfo == null) {\r\n            let ttInfo = {\r\n                \"movieData\":[]\r\n            }\r\n            ttInfo[\"movieData\"].push(data)\r\n\r\n            localStorage.setItem(this.props.userId, JSON.stringify(ttInfo));\r\n        }\r\n        else {\r\n            tInfo.movieData.push(data);\r\n            localStorage.setItem(this.props.userId, JSON.stringify(tInfo));\r\n        }\r\n        this.props.changeMode(AppMode.MOVIE);\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const name = event.target.name;\r\n        this.setState({ [name]: event.target.value });\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        //start spinner\r\n        this.setState({\r\n            faIcon: \"fa fa-spin fa-spinner\",\r\n            btnLabel: (this.props.mode === AppMode.MOVIE_LOG ?\r\n                \"Saving...\" : \"Updating...\")\r\n        });\r\n        //Prepare current round data to be saved\r\n        let movieData = this.state;\r\n        delete movieData.faIcon;\r\n        delete movieData.btnLabel;\r\n        //call saveRound on 1 second delay to show spinning icon\r\n        setTimeout(this.saveData, 1000, movieData);\r\n        event.preventDefault();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"padded\">\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <center>\r\n                        <label>\r\n                            Title:\r\n                            <input name=\"title\" className=\"form-control form-center\" type=\"text\" value={this.state.title} onChange={this.handleChange} />\r\n                        </label>\r\n                        <p></p>\r\n                        <label>\r\n                            Production Company:\r\n                            <input name=\"productionCompany\" className=\"form-control form-center\" type=\"text\" value={this.state.productionCompany} onChange={this.handleChange} />\r\n                        </label>\r\n                        <p></p>\r\n                        <label>\r\n                            Length:\r\n                            <input name=\"length\" className=\"form-control form-center\" type=\"number\" value={this.state.length} onChange={this.handleChange} />\r\n                        </label>\r\n                        <p></p>\r\n                        <label>\r\n                            Genre:\r\n                            <input name=\"genre\" className=\"form-control form-center\" type=\"text\" value={this.state.genre} onChange={this.handleChange} />\r\n                        </label>\r\n                        <p></p>\r\n                        <label>\r\n                            Budget:\r\n                            <input name=\"budget\" className=\"form-control form-center\" type=\"number\" value={this.state.budget} onChange={this.handleChange} />\r\n                        </label>\r\n                        <p></p>\r\n                        <label>\r\n                            Release Date:\r\n                            <input name=\"releaseDate\" className=\"form-control form-center\" type=\"text\" value={this.state.releaseDate} onChange={this.handleChange} />\r\n                        </label>\r\n                        <p></p>\r\n                        <p></p>\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-color-theme\"><span className={this.state.faIcon}>&nbsp;{this.state.btnLabel}</span></button>\r\n                    </center>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddPage;","import React from 'react';\r\n\r\nclass InfoPage extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"padded\">\r\n                <h3>Under Construction</h3>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default InfoPage;","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass SideMenu extends React.Component {\r\n\r\n    renderModeMenuItems = () => {\r\n        if (this.props.mode === AppMode.MOVIE) {\r\n            return (\r\n                <div>\r\n                    <a className=\"sideMenuItem\" onClick={()=> {this.props.changeMode(AppMode.MOVIE_LOG)}}>\r\n                        <span className=\"fa fa-plus\"></span>\r\n                        &nbsp;Add Movie\r\n                    </a>\r\n                </div>\r\n            );\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"sidemenu \" + (this.props.menuOpen ? \"sidemenu-open\" : \"sidemenu-closed\")} >\r\n                <div className=\"sidemenu-title\">\r\n                    <img src=\"https://cdn-a.william-reed.com/var/wrbm_gb_food_pharma/storage/images/7/2/3/4/634327-1-eng-GB/Middle-Eastern-wars-hit-Moldovan-lamb-export-sales_wrbm_large.jpg\" height=\"40px\" width=\"40px\"></img>\r\n                    <span id=\"userID\" className=\"userIdText\">{this.props.userId}</span>\r\n                </div>\r\n                {this.renderModeMenuItems()}\r\n                <a id='about' className=\"aboutMenuItem menuItem\" onClick={this.props.showAbout}><span className=\"fa fa-angle-right\">&nbsp;About&nbsp;</span></a>\r\n                <a id=\"logout\" className=\"logoutMenuItem menuItem\" onClick={() => {this.props.changeMode(AppMode.LOGIN)}}><span className=\"fa fa-angle-right\">&nbsp;Logout&nbsp;</span></a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SideMenu;\r\n","import React from 'react';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass ModeBar extends React.Component {\r\n    handleModeBtnClick = (newMode) => {\r\n        if (this.props.mode != newMode) {\r\n            this.props.changeMode(newMode);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={\"modebar\" + (this.props.mode === AppMode.LOGIN ? \" invisible\" : \" visible\")}>\r\n                <a className={\"modebar-btn\" + (this.props.mode === AppMode.MOVIE ? \" modebar-item-selected\" : \"\")} onClick={this.props.menuOpen ? null : () => this.handleModeBtnClick(AppMode.MOVIE)}>\r\n                    <span className=\"modebar-icon nonMenuItem fa fa-th-list\"></span>\r\n                    <span className=\"modebar-text\">Movie</span>\r\n                </a>\r\n                <a className={\"modebar-btn\" + (this.props.mode === AppMode.MOVIE_INFO ? \" modebar-item-selected\" : \"\")} onClick={this.props.menuOpen ? null : () => this.handleModeBtnClick(AppMode.MOVIE_INFO)}>\r\n                    <span className=\"modebar-icon nonMenuItem fa fa-th-list\"></span>\r\n                    <span className=\"modebar-text\">Movie Info</span>\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModeBar;","import React from 'react';\r\nimport $ from 'jquery';\r\nimport AppMode from '../AppMode.js';\r\n\r\nclass MovieRefresh extends React.Component {\r\n    componentDidMount(){\r\n        this.props.changeMode(AppMode.MOVIE)\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MovieRefresh;","import React from 'react';\nimport NavBar from './NavBar.js';\nimport LoginPage from './LoginPage.js';\nimport MoviePage from './MoviePage.js';\nimport AddPage from './AddPage.js';\nimport InfoPage from './InfoPage.js';\nimport SideMenu from './SideMenu.js';\nimport ModeBar from './ModeBar.js';\nimport AppMode from '../AppMode.js';\nimport MovieRefresh from './MovieRefresh.js';\n\nconst modeTitle = {};\nmodeTitle[AppMode.LOGIN] = \"Welcome\";\nmodeTitle[AppMode.MOVIE] = \"Movie Table\";\nmodeTitle[AppMode.MOVIE_EDIT] = \"Edit Movie\";\nmodeTitle[AppMode.MOVIE_LOG] = \"Add Movie\";\nmodeTitle[AppMode.MOVIE_INFO] = \"Addition Info\";\nmodeTitle[AppMode.MOVIE] = \"REFRESHING\"\n\nconst modeToPage = {};\nmodeToPage[AppMode.LOGIN] = LoginPage;\nmodeToPage[AppMode.MOVIE] = MoviePage;\nmodeToPage[AppMode.MOVIE_EDIT] = AddPage;\nmodeToPage[AppMode.MOVIE_LOG] = AddPage;\nmodeToPage[AppMode.MOVIE_INFO] = InfoPage;\nmodeToPage[AppMode.MOVIER] = MovieRefresh;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: AppMode.LOGIN,\n      menuOpen: false,\n      userId: \"\",\n      showAbout: false\n    };\n  }\n\n  handleChangeMode = (newMode) => {\n    this.setState({ mode: newMode });\n  }\n\n  openMenu = () => {\n    this.setState({ menuOpen: true });\n  }\n\n  closeMenu = () => {\n    this.setState({ menuOpen: false });\n  }\n\n  toggleMenuOpen = () => {\n    this.setState(prevState => ({ menuOpen: !prevState.menuOpen }));\n  }\n\n  setUserId = (Id) => {\n    this.setState({ userId: Id });\n  }\n\n  componentDidMount() {\n    window.addEventListener(\"click\", this.handleClick);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"click\", this.handleClick);\n  }\n\n  handleClick = (event) => {\n    if (this.state.menuOpen) this.closeMenu();\n    event.stopPropagation();\n  }\n\n  toggleAbout = () => {\n    this.setState(prevState => ({ showAbout: !prevState.showAbout }));\n  }\n\n  renderAbout = () => {\n    return (\n      <div id=\"aboutModal\" className=\"modal\">\n        <div className=\"modal-content\">\n          <header><h2>About</h2></header>\n          <br></br>\n          \n          <p>This application is used for storing movie data.</p>\n          <span id=\"modal-close-id\" className=\"modal-close\" onClick={this.toggleAbout}>OK</span>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    const ModePage = modeToPage[this.state.mode];\n    return (\n      <div onClick={this.handleClick}>\n        <NavBar \n          title={modeTitle[this.state.mode]}\n          mode={this.state.mode}\n          changeMode={this.handleChangeMode}\n          menuOpen={this.state.menuOpen}\n          toggleMenuOpen={this.toggleMenuOpen}/>\n        <SideMenu \n          mode={this.state.mode}\n          menuOpen={this.state.menuOpen}\n          changeMode={this.handleChangeMode}\n          userId={this.state.userId}\n          showAbout={this.toggleAbout}/>\n        <ModeBar \n          mode={this.state.mode} \n          changeMode={this.handleChangeMode}\n          menuOpen={this.state.menuOpen}/>\n        <ModePage menuOpen={this.state.menuOpen}\n          mode={this.state.mode} \n          changeMode={this.handleChangeMode}\n          userId={this.state.userId}\n          setUserId={this.setUserId}/>\n        {this.state.showAbout ? this.renderAbout() : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './styles/index.css';\nimport './styles/modal.css';\nimport './styles/App.css';\nimport './styles/NavBar.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}